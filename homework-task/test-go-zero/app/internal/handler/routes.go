// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package handler

import (
	"net/http"
	"time"

	login "blog-api/internal/handler/login"
	post "blog-api/internal/handler/post"
	"blog-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: login.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: login.RegisterHandler(serverCtx),
			},
		},
		rest.WithTimeout(60000*time.Millisecond),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/post",
				Handler: post.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/post",
				Handler: post.SelectHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/post",
				Handler: post.UpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/post",
				Handler: post.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/post/:id",
				Handler: post.SingleHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithTimeout(60000*time.Millisecond),
	)
}
