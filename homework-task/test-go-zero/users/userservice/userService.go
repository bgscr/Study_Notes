// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: users.proto

package userservice

import (
	"context"

	"testGoZero/users/users"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginUserInfoReq     = users.LoginUserInfoReq
	LoginUserInfoResp    = users.LoginUserInfoResp
	RegisterUserInfoReq  = users.RegisterUserInfoReq
	RegisterUserInfoResp = users.RegisterUserInfoResp

	UserService interface {
		Register(ctx context.Context, in *RegisterUserInfoReq, opts ...grpc.CallOption) (*RegisterUserInfoResp, error)
		Login(ctx context.Context, in *LoginUserInfoReq, opts ...grpc.CallOption) (*LoginUserInfoResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Register(ctx context.Context, in *RegisterUserInfoReq, opts ...grpc.CallOption) (*RegisterUserInfoResp, error) {
	client := users.NewUserServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserService) Login(ctx context.Context, in *LoginUserInfoReq, opts ...grpc.CallOption) (*LoginUserInfoResp, error) {
	client := users.NewUserServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
